日期：2020-06-12 01:50
环境：python 2.7.5
----------------------
【shell函数回顾】
function 函数名{
}

函数名(){
}

【python函数】
定义函数：
def 函数名():
    命令
    return x            #返回值，如果没有返回值为空（None）

执行函数：
函数()

调用函数：
变量=函数()

# vim mystar.py                 #编辑一个python脚本
#!/usr/bin/python
#coding:utf-8

'''这是一个模块
    主要是测使用'''             #添加帮助信息

Hi="Hello world!"               #定一个变量Hi

def star():                     #定一个函数star
    '''这是一个函数
    这个函数是打印星星'''   #添加帮助信息
    print "*"*20                #输出20个*
    print "OK"                  #输出OK

star()                          #执行star函数，前面不能有tab键（仅作演示，一般模块不写这行）

# chmod +x mystart.py           #给脚本赋予执行权限
# ./mystar.py                   #执行脚本
********************
OK

【返回值】
#!/usr/bin/python
#coding:utf-8
def jisuan():
    print '结果：'
    x=1+2
    y=2+3
    z=3+4
#   return x,y,z            #函数执行完进程便结束了，调用变量值需要用return将值返回到函数。（可以理解为：变量相当于存放到内存的一个容器，进程结束时内存被释放，变量也随之消失。return的作用相当于在子进程结束前，将子进程的'变量值'返回到父进程。）

print jisuan()

# 不使用return运行脚本
结果：
None

# 使用return运行脚本
结果：
(3, 5, 7)
